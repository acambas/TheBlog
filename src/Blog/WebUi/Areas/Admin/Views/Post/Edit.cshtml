@model WebUi.Models.Blog.EditPostViewModel
@using System.Web.Script.Serialization;
@using WebUi.App_Start
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout_Admin.cshtml";
}

<h2><a href="@Url.RouteUrl("ViewPost", new { id = Model.UrlSlug })" class="">Link to post</a></h2>

@using (Html.BeginForm(Html.BeginForm("Edit", "Post", new { Area = "Admin" }, FormMethod.Post, new { id = "target", enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UrlSlug)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            <label for="file" class="control-label col-md-2">Old Image</label>
            <div class="col-md-10">
                <img class="col-md-4 img-responsive img-border img-thumbnail" src="@Url.Action("Image", "Image", new { id = Model.ImageId , Area = ""})" alt="No Image" />
            </div>
        </div>

        <div class="form-group">
            <label for="file" class="control-label col-md-2">Upload New Image:</label>
            <div class="col-md-10">
                <input type="file" name="file" id="file" style="width: 100%;" />
            </div>
        </div>

        <h4 class="text-center">
            @Html.LabelFor(model => model.ShortDescription)
        </h4>
        <div class="form-group">
            <div class="col-md-12">
                @Html.CkeditorFor(model => model.ShortDescription, new { height = 150 })
                @Html.ValidationMessageFor(model => model.ShortDescription)
            </div>
        </div>

        <h4 class="text-center">
            @Html.LabelFor(model => model.Description)
        </h4>
        <div class="form-group">
            <div class="col-md-12">
                @Html.CkeditorFor(model => model.Description, new { height = 450 })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="hidden" id="Tags" name="Tags" value="@Model.getTagsValue()" tabindex="-1" class="select2-offscreen col-md-12">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="submitbtn" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div id="loading">
    <div id="loadingcontent">
        <p id="loadingspinner">
            Working...
        </p>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section css{
    <link href="~/Content/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2-bootstrap.css" rel="stylesheet" />
}

@section headscripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/select2.min.js"></script>
    <script src="~/Scripts/spin.min.js"></script>
}

@section scripts {
    <script type="text/javascript">
        var tags = @Html.Raw(Json.Encode(Model.ArrayOfAllTags()))
        $(document).ready(function () {

            $("#Tags").select2({
                tags: tags,
                maximumInputLength: 15,
                tokenSeparators: [",", " "]
            });

            $("#target").submit(function (event) {
                if (!$(this).valid()) {
                    return false;
                }
                $("#loading").fadeIn();
                var opts = {
                    lines: 12, // The number of lines to draw
                    length: 7, // The length of each line
                    width: 4, // The line thickness
                    radius: 10, // The radius of the inner circle
                    color: '#000', // #rgb or #rrggbb
                    speed: 1, // Rounds per second
                    trail: 60, // Afterglow percentage
                    shadow: false, // Whether to render a shadow
                    hwaccel: false // Whether to use hardware acceleration
                };
                var target = document.getElementById('loading');
                var spinner = new Spinner(opts).spin(target);
            });
        });
    </script>
}